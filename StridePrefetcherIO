import random
import pytest
import chisel3.iotesters.PeekPokeTester

class StridePrefetcherTester(chisel3.iotesters.PeekPokeTester):
    def test_stride_prefetcher(self):
        # Construct memory access traces
        cont_trace = [i for i in range(256)]
        noncont_trace = random.sample(range(256), 256)
        
        # Test continuous trace
        self.poke('prefetch_enable', 1)
        self.poke('access_address', cont_trace[0])
        for i in range(1, len(cont_trace)):
            self.expect('prefetched_address', cont_trace[i])
            self.poke('access_address', cont_trace[i])
            
        # Test non-continuous trace
        self.poke('prefetch_enable', 1)
        self.poke('access_address', noncont_trace[0])
        for i in range(1, len(noncont_trace)):
            if (noncont_trace[i] - noncont_trace[i - 1]) == 1:
                self.expect('prefetched_address', noncont_trace[i] + 1)
            else:
                self.expect('prefetched_address', noncont_trace[i])
            self.poke('access_address', noncont_trace[i])
