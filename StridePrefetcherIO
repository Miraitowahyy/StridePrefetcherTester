import chisel3.iotesters.PeekPokeTester

class StridePrefetcherTester(dut: StridePrefetcher) extends PeekPokeTester(dut) {
  def testStridePrefetcher(): Unit = {
    // Test continuous access sequence
    poke(dut.io.addr.valid, true)
    poke(dut.io.addr.bits, 0)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 4)
    poke(dut.io.addr.bits, 4)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 8)
    poke(dut.io.addr.bits, 8)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 12)
    // Continue the sequence...

    // Test non-continuous access sequence
    poke(dut.io.addr.valid, true)
    poke(dut.io.addr.bits, 0)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 8)
    poke(dut.io.addr.bits, 8)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 16)
    poke(dut.io.addr.bits, 16)
    step(1)
    expect(dut.io.prefetch.valid, true)
    expect(dut.io.prefetch.bits, 24)
    // Continue the sequence...
  }
}
